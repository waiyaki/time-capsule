# -*- coding: utf-8 -*-
"""
Created on Sun May 11 22:18:26 2014

@author: bugtraq : Waiyaki
"""
import sqlite3

# Establish a connection to the database
with sqlite3.connect("gommssms.db") as connection:
    #set connection cursor
    c = connection.cursor()
    
    # Get text id from the database and store them in a list
    c.execute("select _id from sms")
    textID = []
    for row in c.fetchall():
        textID.append(row)
    
    # Get sender phone number(Incoming Messages) 
    c.execute("select address from sms")
    phone = []
    for row in c.fetchall():
        phone.append(row)
    
    # Try resolve origin, incoming or outgoing
    c.execute("select seen from sms")
    origin = []
    for row in c.fetchall(): 
        origin.append(row)
        
    c.execute("select status from sms")
    origin2 = []
    for row in c.fetchall():
        origin2.append(row)
    
    # Get the body of the sms
    c.execute("select body from sms")
    messages = []
    for row in c.fetchall():
        messages.append(row)

def search(texts, ph):
    print("\nGOSMS PRIVATE BOX DATABASE EXPLOIT")
    print("SEARCH TEXTS")
    print("\nPress ctrl-C then Enter to Exit")
    key = input("Enter a text to search for in messages: ")
    for i in range(len(texts)):
        '''Throw in an exception block to catch errors 
               that may arise from the search '''
        # Define origin
        if origin[i][0] == 0:
            src = 'Outgoing Message'
        if origin2[i][0] == 0:
            src= 'Outgoing Message'
        if origin[i][0] == 1:
            src = 'Incoming Message'
        if origin2[i][0] == -1:
            src = 'Incoming Message'
        # Catch Errors while printing out the search results    
        try:
            if key in texts[i][0]:
                if src == 'Incoming Message':
                    ph_number = ph[i][0]
                    
                    print("({} from {}) : {}".format(src, ph_number, texts[i][0]))
                else:
                    print("{} : {}".format(src, texts[i][0]))
        except TypeError as err:
            print("\nError: {}\n".format(err))
        except UnicodeEncodeError as Err:
            print("\nError : {}\n".format(Err))
    
# Print out the information.
print("\nGOSMS PRIVATE BOX DATABASE EXPLOIT\n")
for i in range(len(textID)):
    if origin[i][0] == 0:
        source = 'Outgoing Message'
    if origin2[i][0] == 0:
        source = 'Outgoing Message'
    if origin[i][0] == 1:
        source = 'Incoming Message'
    if origin2[i][0] == -1:
        source = 'Incoming Message'
        
    # If its an incoming message, display the senders phone number
    # Catch Errors
    try:
        if source == 'Incoming Message':
            ph_number = phone[i][0]
            print("{}. ({} from {}) : {}".format(textID[i][0], source, ph_number, messages[i][0]))
            
        else:
            print("{}. ({}) : {}".format(textID[i][0], source, messages[i][0]))
    except UnicodeEncodeError as Err:
        print("\nError: {}\n".format(Err))
    except ValueError as err:
        print("\nError : {}\n".format(err))
        
while True:
    search(messages, phone)

input()
